var cov_2kz2ovbjkl=function(){var path="/home/marcio.souza/projetos/repeat-please/code/repeat-please-api/src/middlewares/auth/verifyToken.js";var hash="3e0e97a30955743d11d25ff07667858cd2d2dc7a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/marcio.souza/projetos/repeat-please/code/repeat-please-api/src/middlewares/auth/verifyToken.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:45}},"1":{start:{line:2,column:14},end:{line:2,column:50}},"2":{start:{line:3,column:17},end:{line:3,column:57}},"3":{start:{line:5,column:0},end:{line:31,column:2}},"4":{start:{line:7,column:21},end:{line:7,column:50}},"5":{start:{line:9,column:4},end:{line:12,column:5}},"6":{start:{line:10,column:22},end:{line:10,column:71}},"7":{start:{line:11,column:8},end:{line:11,column:27}},"8":{start:{line:14,column:23},end:{line:14,column:35}},"9":{start:{line:16,column:4},end:{line:30,column:7}},"10":{start:{line:18,column:8},end:{line:25,column:9}},"11":{start:{line:19,column:24},end:{line:23,column:17}},"12":{start:{line:24,column:12},end:{line:24,column:29}},"13":{start:{line:27,column:8},end:{line:27,column:32}},"14":{start:{line:29,column:8},end:{line:29,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:17},end:{line:5,column:18}},loc:{start:{line:5,column:37},end:{line:31,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:35},end:{line:16,column:36}},loc:{start:{line:16,column:55},end:{line:30,column:5}},line:16}},branchMap:{"0":{loc:{start:{line:9,column:4},end:{line:12,column:5}},type:"if",locations:[{start:{line:9,column:4},end:{line:12,column:5}},{start:{line:9,column:4},end:{line:12,column:5}}],line:9},"1":{loc:{start:{line:18,column:8},end:{line:25,column:9}},type:"if",locations:[{start:{line:18,column:8},end:{line:25,column:9}},{start:{line:18,column:8},end:{line:25,column:9}}],line:18}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"3e0e97a30955743d11d25ff07667858cd2d2dc7a"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const config=(cov_2kz2ovbjkl.s[0]++,require('../../config/config'));const token=(cov_2kz2ovbjkl.s[1]++,require('../../services/auth/token'));const AppError=(cov_2kz2ovbjkl.s[2]++,require('../../exceptions/AppException'));cov_2kz2ovbjkl.s[3]++;module.exports=(req,res,next)=>{cov_2kz2ovbjkl.f[0]++;const reqToken=(cov_2kz2ovbjkl.s[4]++,req.headers['x-access-token']);cov_2kz2ovbjkl.s[5]++;if(!reqToken){cov_2kz2ovbjkl.b[0][0]++;const error=(cov_2kz2ovbjkl.s[6]++,new AppError('Token was not found',401,'error'));cov_2kz2ovbjkl.s[7]++;return next(error);}else{cov_2kz2ovbjkl.b[0][1]++;}const{secret}=(cov_2kz2ovbjkl.s[8]++,config.token);cov_2kz2ovbjkl.s[9]++;token.verify(reqToken,secret,(error,decoded)=>{cov_2kz2ovbjkl.f[1]++;cov_2kz2ovbjkl.s[10]++;if(error){cov_2kz2ovbjkl.b[1][0]++;const err=(cov_2kz2ovbjkl.s[11]++,new AppError(`Token was not validated: ${error.message}`,401,'error'));cov_2kz2ovbjkl.s[12]++;return next(err);}else{cov_2kz2ovbjkl.b[1][1]++;}cov_2kz2ovbjkl.s[13]++;req.userId=decoded.id;cov_2kz2ovbjkl.s[14]++;return next();});};