var cov_m3mtkviuw=function(){var path="/home/marcio.souza/projetos/repeat-please/code/repeat-please-api/src/services/github/fetch.js";var hash="6a1cd29d894253d928b8c0dfdabee9a0b3885785";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/marcio.souza/projetos/repeat-please/code/repeat-please-api/src/services/github/fetch.js",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:69}},"1":{start:{line:2,column:18},end:{line:2,column:40}},"2":{start:{line:3,column:12},end:{line:3,column:42}},"3":{start:{line:5,column:14},end:{line:15,column:2}},"4":{start:{line:5,column:30},end:{line:15,column:2}},"5":{start:{line:6,column:4},end:{line:14,column:7}},"6":{start:{line:8,column:8},end:{line:8,column:37}},"7":{start:{line:11,column:8},end:{line:11,column:37}},"8":{start:{line:12,column:25},end:{line:12,column:59}},"9":{start:{line:13,column:8},end:{line:13,column:32}},"10":{start:{line:17,column:0},end:{line:17,column:27}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:14},end:{line:5,column:15}},loc:{start:{line:5,column:30},end:{line:15,column:2}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:5,column:42},end:{line:5,column:43}},loc:{start:{line:5,column:63},end:{line:15,column:1}},line:5},"2":{name:"(anonymous_2)",decl:{start:{line:7,column:10},end:{line:7,column:11}},loc:{start:{line:7,column:28},end:{line:9,column:5}},line:7},"3":{name:"(anonymous_3)",decl:{start:{line:10,column:11},end:{line:10,column:12}},loc:{start:{line:10,column:20},end:{line:14,column:5}},line:10}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},f:{"0":0,"1":0,"2":0,"3":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"6a1cd29d894253d928b8c0dfdabee9a0b3885785"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const github=(cov_m3mtkviuw.s[0]++,require('../../integrations/github/githubIntegration'));const httpError=(cov_m3mtkviuw.s[1]++,require('http-errors'));const log=(cov_m3mtkviuw.s[2]++,require('../../config/logger'));cov_m3mtkviuw.s[3]++;const fetch=(user,repo)=>{cov_m3mtkviuw.f[0]++;cov_m3mtkviuw.s[4]++;return new Promise((resolve,reject)=>{cov_m3mtkviuw.f[1]++;cov_m3mtkviuw.s[5]++;github.repo(user,repo).then(repoResponse=>{cov_m3mtkviuw.f[2]++;cov_m3mtkviuw.s[6]++;return resolve(repoResponse);}).catch(err=>{cov_m3mtkviuw.f[3]++;cov_m3mtkviuw.s[7]++;log.build(log.lv.ERROR,err);const appError=(cov_m3mtkviuw.s[8]++,httpError(err.status,err.message));cov_m3mtkviuw.s[9]++;return reject(appError);});});};cov_m3mtkviuw.s[10]++;module.exports={fetch};