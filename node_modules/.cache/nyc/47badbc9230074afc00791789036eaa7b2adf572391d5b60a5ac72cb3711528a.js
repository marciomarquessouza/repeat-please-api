var cov_23s7yawl9m=function(){var path="/home/marcio.souza/projetos/repeat-please/code/repeat-please-api/src/services/auth/user.js";var hash="41af585171f9c01acada92ebdd1bfb69a189f4d9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/marcio.souza/projetos/repeat-please/code/repeat-please-api/src/services/auth/user.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:47}},"1":{start:{line:2,column:19},end:{line:2,column:41}},"2":{start:{line:3,column:12},end:{line:3,column:42}},"3":{start:{line:5,column:13},end:{line:19,column:1}},"4":{start:{line:6,column:4},end:{line:18,column:7}},"5":{start:{line:7,column:8},end:{line:17,column:11}},"6":{start:{line:10,column:12},end:{line:10,column:45}},"7":{start:{line:11,column:12},end:{line:11,column:40}},"8":{start:{line:14,column:29},end:{line:14,column:64}},"9":{start:{line:15,column:12},end:{line:15,column:41}},"10":{start:{line:16,column:12},end:{line:16,column:36}},"11":{start:{line:21,column:0},end:{line:21,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:13},end:{line:5,column:14}},loc:{start:{line:5,column:25},end:{line:19,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:6,column:23},end:{line:6,column:24}},loc:{start:{line:6,column:44},end:{line:18,column:5}},line:6},"2":{name:"(anonymous_2)",decl:{start:{line:9,column:14},end:{line:9,column:15}},loc:{start:{line:9,column:31},end:{line:12,column:9}},line:9},"3":{name:"(anonymous_3)",decl:{start:{line:13,column:15},end:{line:13,column:16}},loc:{start:{line:13,column:24},end:{line:17,column:9}},line:13}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0,"2":0,"3":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"41af585171f9c01acada92ebdd1bfb69a189f4d9"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const User=(cov_23s7yawl9m.s[0]++,require('../../models/users/User'));const httpErrors=(cov_23s7yawl9m.s[1]++,require('http-errors'));const log=(cov_23s7yawl9m.s[2]++,require('../../config/logger'));cov_23s7yawl9m.s[3]++;const user=userId=>{cov_23s7yawl9m.f[0]++;cov_23s7yawl9m.s[4]++;return new Promise((resolve,reject)=>{cov_23s7yawl9m.f[1]++;cov_23s7yawl9m.s[5]++;new User({_id:userId}).findUserById().then(fetchedUser=>{cov_23s7yawl9m.f[2]++;cov_23s7yawl9m.s[6]++;fetchedUser.password=undefined;cov_23s7yawl9m.s[7]++;return resolve(fetchedUser);}).catch(err=>{cov_23s7yawl9m.f[3]++;const appError=(cov_23s7yawl9m.s[8]++,httpErrors(err.status,err.message));cov_23s7yawl9m.s[9]++;log.build(log.lv.ERROR,err);cov_23s7yawl9m.s[10]++;return reject(appError);});});};cov_23s7yawl9m.s[11]++;module.exports={user};